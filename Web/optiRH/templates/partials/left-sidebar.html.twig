<!-- ========== Left Sidebar Start ========== -->
<div class="left-side-menu">

    <div class="h-100" data-simplebar>


        <!--- Sidemenu -->
        <div id="sidebar-menu">
            <ul id="side-menu">

                <li class="menu-title">Navigation</li>

                <!-- Switch Interface -->
                <li>
                    <a href="/admin">
                        <i class="mdi mdi-view-dashboard-outline"></i>
                        <span class="badge bg-success rounded-pill float-end">9+</span>
                        <span> Dashboard </span>
                    </a>
                </li>

                <!-- Mission -->
                <li>
                    <a href="{{ path('gs-projet_project_app_missions_index') }}" class="{{ app.request.attributes.get('_route') starts with 'gs-projet_project_app_missions' ? 'active' : '' }}">
                        <i class="mdi mdi-rocket-launch-outline"></i>
                        <span>Missions</span>
                    </a>
                </li>

 <li>
    <a href="{{ path('app_transport_trajet_index') }}">
    <i class="mdi mdi-bus-multiple"></i>
    <span> Transport </span>
</a>
</li>

         <li>
                <a href="{{ path('app_transport_reservation_index') }}">
                    <i class="mdi mdi-calendar-check"></i>
                    <span>RÃ©servations</span>
                </a>
            </li>    
            </ul>
        </div>
        <!-- End Sidebar -->

        <div class="clearfix"></div>
    </div>
    <!-- Sidebar -left -->
</div>
<!-- Left Sidebar End -->

<style>
    /* Active Button Style */
    .btn-group .btn.active {
        background-color: rgba(255,255,255,0.15);
        color: #fff;
        border-color: rgba(255,255,255,0.3);
    }

    /* Menu Item Styles */
    #side-menu a {
        transition: all 0.3s;
        position: relative;
    }

    #side-menu a.active {
        background-color: rgba(255,255,255,0.1);
        color: #fff !important;
        border-left: 3px solid #727cf5;
    }

    #side-menu a:hover:not(.active) {
        background-color: rgba(255,255,255,0.05);
    }

    /* Submenu Styles */
    .nav-second-level a {
        padding-left: 15px !important;
        font-size: 0.9rem;
    }

    .nav-second-level a.active {
        border-left: 2px solid #727cf5;
    }

    /* Menu Arrow Animation */
    .menu-arrow {
        transition: transform 0.2s;
        display: inline-block;
    }

    [aria-expanded="true"] .menu-arrow {
        transform: rotate(90deg);
    }

    /* User Box Enhancements */
    .user-box {
        padding: 20px 10px;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    .left-user-info {
        font-size: 0.8rem;
        margin-bottom: 5px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-expand active menu items
        document.querySelectorAll('#side-menu a.active').forEach(activeItem => {
            const parentCollapse = activeItem.closest('.collapse');
            if (parentCollapse) {
                parentCollapse.classList.add('show');
                const trigger = document.querySelector('[data-bs-target="#' + parentCollapse.id + '"]');
                if (trigger) {
                    trigger.setAttribute('aria-expanded', 'true');
                }
            }
        });

        // Responsive handling
        function handleResponsive() {
            const sidebar = document.querySelector('.left-side-menu');
            if (window.innerWidth < 992) {
                sidebar.classList.add('sidebar-collapsed');
            } else {
                sidebar.classList.remove('sidebar-collapsed');
            }
        }

        window.addEventListener('resize', handleResponsive);
        handleResponsive();

        // Add ripple effect to menu items
        document.querySelectorAll('#side-menu a').forEach(item => {
            item.addEventListener('click', function(e) {
                const ripple = document.createElement('span');
                ripple.classList.add('ripple-effect');
                this.appendChild(ripple);

                const x = e.clientX - this.getBoundingClientRect().left;
                const y = e.clientY - this.getBoundingClientRect().top;

                ripple.style.left = `${x}px`;
                ripple.style.top = `${y}px`;

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
    });
</script>