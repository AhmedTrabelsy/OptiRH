{% extends 'partials/layout-vertical.html.twig' %}

{% block title %}Liste des Événements{% endblock %}

{% block topbar %}
    {{ include('partials/topbar.html.twig', { page_title: 'Liste des Événements' }) }}

{% endblock %}

{% block css %}
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('css/Evenement/frontevenement.css') }}">  
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.6/dist/sweetalert2.min.css" rel="stylesheet">
  
{% endblock %}
{% block body %}
{% for message in app.flashes('deja_reserve') %}
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        {{ message }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
{% endfor %}
{% for message in app.flashes('complet') %}
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        {{ message }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
{% endfor %}
{% for message in app.flashes('date_passee') %}
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        {{ message }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
{% endfor %}

{% for message in app.flashes('sms') %}
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        {{ message }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
{% endfor %}

{% for message in app.flashes('paiment') %}
    <div class="alert alert-warning alert-succes" role="alert">
        {{ message }}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
{% endfor %}
<style>
    /* Design moderne du toggle */
    .toggle-container {
        display: flex;
        align-items: center;
        margin-left: 15px;
    }
    
    .toggle-label {
        margin: 0 10px;
        font-weight: 500;
        color: #6c757d;
        transition: all 0.3s ease;
    }
    
    .toggle-label.active {
        color: #5e72e4;
    }
    
    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 30px;
    }
    
    .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }
    
    .toggle-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #e9ecef;
        border-radius: 34px;
        transition: .4s;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
    }
    
    .toggle-slider:before {
        position: absolute;
        content: "";
        height: 24px;
        width: 24px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        border-radius: 50%;
        transition: .4s;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }
    
    input:checked + .toggle-slider {
        background: linear-gradient(135deg, #5e72e4 0%, #825ee4 100%);
    }
    
    input:checked + .toggle-slider:before {
        transform: translateX(30px);
    }
    
    .toggle-icon {
        margin-right: 5px;
        font-size: 18px;
        vertical-align: middle;
    }
</style>
<style>

    .countdown-container {
        margin: 20px 0;
    }
    
    .countdown-card {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(5px);
        border-radius: 12px;
        padding: 15px 10px;
        min-width: 80px;
        text-align: center;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
    }
    
    .countdown-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }
    
    .countdown-value {
        font-size: 2rem;
        font-weight: 700;
        color: #fff;
        line-height: 1;
        margin-bottom: 5px;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }
    
    .countdown-label {
        font-size: 0.8rem;
        color: rgba(255, 255, 255, 0.8);
        text-transform: uppercase;
        letter-spacing: 1px;
    }
    
    @media (max-width: 768px) {
        .countdown-card {
            min-width: 60px;
            padding: 10px 5px;
        }
        
        .countdown-value {
            font-size: 1.5rem;
        }
        
        .countdown-label {
            font-size: 0.7rem;
        }
    }
</style>
    <style>
        .marketing-btn {
            color: #d63384;
            border-color: #d63384;
            background-color: transparent;
        }
        .marketing-btn:hover {
            background-color: #d63384;
            border-color: #d63384;
            color: white;
        }

        /* Bouton Finance */
        .finance-btn {
            color: #6f42c1;
            border-color: #6f42c1;
            background-color: transparent;
        }
        .finance-btn:hover {
            background-color: #6f42c1;
            border-color: #6f42c1;
            color: white;
        }

        /* Bouton Management */
        .management-btn {
            color: #6610f2;
            border-color: #6610f2;
            background-color: transparent;
        }
        .management-btn:hover {
            background-color: #6610f2;
            border-color: #6610f2;
            color: white;
        }
        
        .bg-blur {
            backdrop-filter: blur(2px);
            -webkit-backdrop-filter: blur(2px);
        }
        
        .overlay-dark {
            background: rgba(0, 0, 0, 0.4);
        }
        
        .price-badge {
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 50px;
            padding: 8px 16px;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .pulse {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
            }
        }
        
        .modal-content {
            border-radius: 15px;
            overflow: hidden;
        }
.favorite-btn {
    position: absolute;
    top: 140px;
    right: 15px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 2;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.favorite-btn:hover {
    background: white;
    transform: scale(1.1);
}

.favorite-active {
    color: red; /* Ou une autre couleur pour l'icône rouge */
}



    

    
    </style>


<div class="container-fluid px-4">
    <!-- Section des événements (visible par défaut) -->
     <div id="eventsSection">
        <!-- Header avec dégradé vibrant -->
       <div class="row mb-2"> <!-- Réduction du margin-bottom -->
    <div class="col-12">
        <div class="event-header text-center py-4 position-relative overflow-hidden rounded-3 event-header-image" 
            style="background-image: url('{{ closestEventImage ? asset(closestEventImage) : 'votre_image_par_defaut.jpg' }}'); background-size: cover; background-position: center;">

            <div class="overlay bg-dark opacity-50 position-absolute top-0 start-0 w-100 h-100 rounded-3"></div>

            <div class="position-relative z-index-1">
                <h1 class="display-5 fw-bold text-white mb-3 animate__animated animate__fadeInDown">Nos Événements</h1>

                {% if closestEvent %}
                <div class="countdown-container animate__animated animate__fadeIn animate__delay-1s">
                    <h5 class="text-white mb-3">
                        Ne ratez pas l'événement 
                        <span class="fw-bold text-warning">"{{ closestEvent.titre }}"</span> 
                        qui commence dans :
                    </h5>
                    <div class="d-flex justify-content-center gap-3" id="countdown">
                        <div class="countdown-card">
                            <div class="countdown-value" id="days">00</div>
                            <div class="countdown-label">Jours</div>
                        </div>
                        <div class="countdown-card">
                            <div class="countdown-value" id="hours">00</div>
                            <div class="countdown-label">Heures</div>
                        </div>
                        <div class="countdown-card">
                            <div class="countdown-value" id="minutes">00</div>
                            <div class="countdown-label">Minutes</div>
                        </div>
                        <div class="countdown-card">
                            <div class="countdown-value" id="seconds">00</div>
                            <div class="countdown-label">Secondes</div>
                        </div>
                    </div>
                </div>
                {% endif %}

                <!-- Barre de recherche -->
                <div class="search-container mx-auto animate__animated animate__fadeIn animate__delay-1s" style="max-width: 500px;">
                    <div class="input-group">
                        <input type="text" class="form-control rounded-start-pill border-0 shadow-sm py-2 px-4" id="searchInput" placeholder="Rechercher un événement...">
                    </div>
                </div>

                <!-- Bouton "Mes Réservations" -->
                <a href="{{ path('app_user_reservations') }}" class="btn btn-light rounded-pill px-4 mt-3 animate__animated animate__fadeIn animate__delay-1s">
                    <i class="mdi mdi-ticket-account me-1"></i> Mes Réservations
                </a>
            </div>

        </div>
    </div>
</div>



        <!-- Filtres simplifiés -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-center flex-wrap gap-2">
                    <button type="button" class="btn btn-pill btn-outline-dark active" data-modalite="all">
                        <i class="mdi mdi-star-circle-outline me-1"></i>Tous
                    </button>
                    <button type="button" class="btn btn-pill btn-outline-info" data-modalite="Présentiel">
                        <i class="mdi mdi-monitor me-1"></i>Présentiel
                    </button>
                    <button type="button" class="btn btn-pill btn-outline-success" data-modalite="En Ligne">
                        <i class="mdi mdi-account-group me-1"></i>En ligne
                    </button>

                    <button type="button" class="btn btn-pill btn-outline-danger" data-type="RH">
                        <i class="mdi mdi-briefcase me-1"></i>RH
                    </button>
                    <button type="button" class="btn btn-pill marketing-btn" data-type="Marketing">
                        <i class="mdi mdi-chart-bar me-1"></i>Marketing
                    </button>
                    <button type="button" class="btn btn-pill finance-btn" data-type="Finance">
                        <i class="mdi mdi-cash me-1"></i>Finance
                    </button>
                    <button type="button" class="btn btn-pill management-btn" data-type="Management">
                        <i class="mdi mdi-account-tie me-1"></i>Management
                    </button>
                    <button type="button" class="btn btn-pill btn-outline-success" data-type="Technologie & Innovation">
                        <i class="mdi mdi-robot me-1"></i>Technologie & Innovation
                    </button>
                    <button type="button" class="btn btn-pill btn-outline-info" data-type="Loisir">
                        <i class="mdi mdi-palm-tree me-1"></i>Loisir
                    </button>
                    <button type="button" class="btn btn-pill btn-outline-warning" data-type="Soft Skills">
                        <i class="mdi mdi-account-voice me-1"></i>Soft Skills
                    </button>
                </div>
            </div>
          
            <div class="toggle-container">
                <span class="toggle-label">Tous</span>
                
                <label class="toggle-switch">
                    <input type="checkbox" id="toggleRecommended">
                    <span class="toggle-slider"></span>
                </label>
                
                <span class="toggle-label active">
                    <i class="mdi mdi-heart toggle-icon"></i>Pour moi
                </span>
            </div>
        
        <div class="row g-4" id="event-grid">
            {% include 'evenement/card.html.twig' with {'evenements': evenements, 'favorisIds': favorisIds} %}
        </div>
    
    {% for evenement in evenements %}
    <!-- Modal de détails de l'événement -->
    <div class="modal fade" id="eventModal{{ evenement.id }}" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel{{ evenement.id }}" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content border-0 overflow-hidden">
                
                <!-- En-tête avec image de fond -->
                <div class="modal-header position-relative p-0" style="height: 250px;">
                    {% if evenement.image %}
                    <div class="w-100 h-100 bg-blur" style="background: url('{{ asset(evenement.image) }}'); background-size: cover; background-position: center;"></div>
                    {% else %}
                    <div class="w-100 h-100" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);"></div>
                    {% endif %}
                  
                     <button class="favorite-btn" data-event-id="{{ evenement.id }}">
                                {% if evenement.id in favorisIds %}
                                    <i class="mdi mdi-heart favorite-active"></i>
                                {% else %}
                                    <i class="mdi mdi-heart-outline"></i>
                                {% endif %}
                            </button>
                    
                    <div class="position-absolute w-100 h-100 d-flex flex-column justify-content-between p-4 overlay-dark">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h3 class="modal-title text-white mb-0" id="eventModalLabel{{ evenement.id }}">{{ evenement.titre }}</h3>
                                <p class="text-white-50 mb-0">{{ evenement.type }}</p>
                            </div>
                            <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        
                        <div class="d-flex justify-content-between align-items-end">
                            <div class="price-badge pulse">
                                <span class="text-white">
                                    <i class="mdi mdi-ticket-confirmation mr-1"></i>
                                    <strong>{{ evenement.prix ? evenement.prix ~ 'DT' : 'Gratuit' }}</strong>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Corps du modal -->
                <div class="modal-body p-4">
                    <div class="row">
                        <!-- Colonne de gauche - Description -->
                        <div class="col-md-6">
                            <div class="event-description">
                                <h5 class="mb-3">Description</h5>
                                <p class="text-muted">{{ evenement.description }}</p>
                            </div>
                        </div>
                        
                        <!-- Colonne de droite - Autres détails -->
                        <div class="col-md-6">
                            <div class="event-details">
                                <div class="d-flex align-items-center mb-4">
                                    <div class="icon-circle bg-light-primary mr-3">
                                        <i class="mdi mdi-calendar text-primary"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">Date et Heure</h6>
                                        <p class="mb-0 text-muted">
                                            Du: {{ evenement.dateDebut|date('d M Y') }}<br>
                                            Jusqu'à: {{ evenement.dateFin|date('d M Y') }}<br>
                                            {% if evenement.heure %}
                                                Heure: {{ evenement.heure|date('H:i') }}h
                                            {% endif %}
                                        </p>
                                    </div>
                                </div>

                                <div class="d-flex align-items-center mb-4">
                                    <div class="icon-circle bg-light-success mr-3">
                                        <i class="mdi mdi-map-marker text-success"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">Lieu</h6>
                                        <p class="mb-0 text-muted">{{ evenement.lieu }}</p>
                                    </div>
                                </div>
                                <div class="d-flex align-items-center mb-4">
                                    <div class="icon-circle bg-light-info mr-3">
                                        <i class="mdi mdi-account-multiple text-info"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">Places disponibles</h6>
                                        <p class="mb-0 text-muted">{{ evenement.nbrPersonnes }} place(s)</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Bouton de réservation centré en bas -->
                    <div class="text-center mt-4">
                        <a href="{{ path('app_reservation_evenement_new', {id: evenement.id}) }}" class="btn btn-sm btn-outline-primary rounded-pill">
                            <i class="mdi mdi-ticket-confirmation me-1"></i> Réserver
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endfor %}
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


{% if closestEvent %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const eventStart = new Date('{{ closestEvent.dateDebut.format('Y-m-d\\TH:i:s') }}').getTime();

        function updateCountdown() {
            const now = new Date().getTime();
            const distance = eventStart - now;

            if (distance <= 0) {
                document.getElementById("days").innerText = "00";
                document.getElementById("hours").innerText = "00";
                document.getElementById("minutes").innerText = "00";
                document.getElementById("seconds").innerText = "00";
                clearInterval(countdownInterval);
                return;
            }

            const days = Math.floor(distance / (1000 * 60 * 60 * 24));
            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((distance % (1000 * 60)) / 1000);

            document.getElementById("days").innerText = days.toString().padStart(2, '0');
            document.getElementById("hours").innerText = hours.toString().padStart(2, '0');
            document.getElementById("minutes").innerText = minutes.toString().padStart(2, '0');
            document.getElementById("seconds").innerText = seconds.toString().padStart(2, '0');
        }

        updateCountdown();
        const countdownInterval = setInterval(updateCountdown, 1000);
    });
</script>
{% endif %}


<script>

// Fonction pour attacher les gestionnaires d'événements aux boutons favoris
function attachFavoriteEventHandlers() {
    const favoriteButtons = document.querySelectorAll('.favorite-btn');

    favoriteButtons.forEach(button => {
        // Supprimer l'ancien gestionnaire pour éviter les doublons
        button.removeEventListener('click', handleFavoriteClick);
        // Ajouter le nouveau gestionnaire
        button.addEventListener('click', handleFavoriteClick);
    });
}

// Fonction de gestion du clic sur le bouton favori
function handleFavoriteClick() {
    const eventId = this.getAttribute('data-event-id');
    const userId = '{{ app.user.id }}';
    const url = '{{ path('ajouter_favori') }}';

    fetch(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            event_id: eventId,
            user_id: userId
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Mise à jour visuelle du bouton en fonction de l'action
            if (data.action === 'added') {
                this.querySelector('i').classList.remove('mdi-heart-outline');
                this.querySelector('i').classList.add('mdi-heart');
                this.querySelector('i').classList.add('favorite-active');
            } else if (data.action === 'removed') {
                this.querySelector('i').classList.remove('mdi-heart');
                this.querySelector('i').classList.remove('favorite-active');
                this.querySelector('i').classList.add('mdi-heart-outline');
            }
        } else {
            alert('Erreur lors de la gestion des favoris');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Erreur',
            text: 'Une erreur s\'est produite lors de la gestion des favoris.',
            confirmButtonText: 'Ok'
        });
    });
}

// Fonction pour réattacher tous les gestionnaires d'événements après un chargement AJAX
function reattachEventHandlers() {
    attachFavoriteEventHandlers();
    
    // Animation au survol des cartes (ajoutons-le ici aussi)
    $('.event-card').hover(
        function() {
            $(this).find('.card-image').css('transform', 'scale(1.03)');
        },
        function() {
            $(this).find('.card-image').css('transform', 'scale(1)');
        }
    );
}

// Fonction pour charger les événements avec les filtres et l'ordre appropriés
function loadEvents() {
    var isRecommended = $('#toggleRecommended').is(':checked');
    var searchTerm = $('#searchInput').val();
    var currentModalite = $('.btn[data-modalite].active').data('modalite');
    var currentType = $('.btn[data-type].active').data('type');
    
    var data = {};
    if (searchTerm) data['term'] = searchTerm;
    if (currentModalite && currentModalite !== 'all') data['modalite'] = currentModalite;
    if (currentType && currentType !== 'all') data['type'] = currentType;
    
    if (isRecommended) {
        // Si le toggle est activé, chargement des recommandations
        data['recommended'] = true;
    } else {
        // Si le toggle est désactivé, tri par date d'ajout décroissante
        data['sort'] = 'recent';
    }
    
    $.ajax({
        url: '{{ path('app_evenement_indexfront') }}',
        type: 'GET',
        data: data,
        success: function(response) {
            $('#event-grid').html(response);
            reattachEventHandlers(); // Réattacher les gestionnaires d'événements
        }
    });
}

$(document).ready(function() {
    // Attacher les gestionnaires d'événements lors du chargement initial
    attachFavoriteEventHandlers();
    
    // Gestionnaire pour le toggle des recommandations
    $('#toggleRecommended').change(function() {
        loadEvents();
    });

    // Gestionnaire pour la recherche dynamique
    $('#searchInput').on('input', function() {
        loadEvents();
    });

    // Variables pour stocker l'état des filtres
    var currentModalite = null;
    var currentType = null;

    // Gestionnaire pour le filtrage par boutons
    $('.btn[data-modalite], .btn[data-type]').click(function() {
        var modalite = $(this).data('modalite');
        var type = $(this).data('type');
        var filterChanged = false;

        if (modalite === 'all') { // C'est notre bouton "Tous" pour la modalité
            currentModalite = null;
            currentType = null;
            $('.btn[data-modalite]').removeClass('active');
            $('.btn[data-type]').removeClass('active');
            $('.btn[data-modalite="all"]').addClass('active');
            if ($('.btn[data-type="all"]').length) {
                $('.btn[data-type="all"]').addClass('active');
            }
            filterChanged = true;
        } else if (type === 'all') { // Si vous avez un bouton "Tous" pour le type
            currentType = null;
            currentModalite = null;
            $('.btn[data-modalite]').removeClass('active');
            $('.btn[data-type]').removeClass('active');
            $('.btn[data-type="all"]').addClass('active');
            if ($('.btn[data-modalite="all"]').length) {
                $('.btn[data-modalite="all"]').addClass('active');
            }
            filterChanged = true;
        } else {
            // Gestion de la modalité
            if (modalite !== undefined) {
                if (currentModalite === modalite) {
                    currentModalite = null;
                    $('.btn[data-modalite="all"]').addClass('active');
                    $(this).removeClass('active');
                } else {
                    currentModalite = modalite;
                    $('.btn[data-modalite]').removeClass('active');
                    $(this).addClass('active');
                }
                filterChanged = true;
            }

            // Gestion du type
            if (type !== undefined) {
                if (currentType === type) {
                    currentType = null;
                    $('.btn[data-type="all"]').addClass('active');
                    $(this).removeClass('active');
                } else {
                    currentType = type;
                    $('.btn[data-type]').removeClass('active');
                    $(this).addClass('active');
                }
                filterChanged = true;
            }
        }

        // Effectuer la requête AJAX uniquement si un filtre a changé
        if (filterChanged) {
            loadEvents();
        }
    });

    // Activer les boutons "Tous" au chargement de la page
    $('.btn[data-modalite="all"]').addClass('active');
    if ($('.btn[data-type="all"]').length) {
        $('.btn[data-type="all"]').addClass('active');
    }

    // Animation au survol des cartes
    $('.event-card').hover(
        function() {
            $(this).find('.card-image').css('transform', 'scale(1.03)');
        },
        function() {
            $(this).find('.card-image').css('transform', 'scale(1)');
        }
    );
    
    // Charger les événements initiaux avec l'ordre approprié
    loadEvents();
});
</script>

{% endblock %}