{% extends 'partials/layout-vertical.html.twig' %}

{% block title %}Ajouter un nouveau projet{% endblock %}

{% block topbar %}
    {{ include('partials/topbar.html.twig', { page_title: 'Ajouter un projet' }) }}
{% endblock %}

{% block css %}
    {{ parent() }}
    <!-- SweetAlert2 CSS -->
    <link href="{{ asset('/libs/sweetalert2/sweetalert2.min.css') }}" rel="stylesheet">
{% endblock %}

{% block body %}
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="header-title">Formulaire de création de projet</h4>
                <p class="sub-header">Tous les champs marqués d'une astérisque (*) sont obligatoires</p>

                {{ form_start(form, {
                    'attr': {
                        'class': 'needs-validation', 
                        'novalidate': 'novalidate',
                        'data-parsley-validate': '',
                        'id': 'projectForm'
                    }
                }) }}

                <div class="alert alert-warning d-none fade show">
                    <h4 class="mt-0 text-warning">Erreur !</h4>
                    <p class="mb-0">Veuillez corriger les erreurs dans le formulaire</p>
                </div>

                <div class="mb-3">
                    {{ form_label(form.nom, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.nom, {
                        'attr': {
                            'class': 'form-control',
                            'placeholder': 'Nom du projet*',
                            'required': 'required',
                            'data-parsley-trigger': 'change'
                        }
                    }) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.nom)|striptags }}
                    </div>
                </div>

                <div class="mb-3">
                    {{ form_label(form.description, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.description, {
                        'attr': {
                            'class': 'form-control',
                            'rows': 5,
                            'placeholder': 'Description détaillée du projet*',
                            'required': 'required',
                            'data-parsley-minlength': '20',
                            'data-parsley-maxlength': '500'
                        }
                    }) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.description)|striptags }}
                    </div>
                </div>

                <div class="mb-3">
                    {{ form_label(form.status, null, {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.status, {
                        'attr': {
                            'class': 'form-select',
                            'required': 'required',
                            'data-parsley-errors-container': '#status-errors'
                        }
                    }) }}
                    <div id="status-errors" class="invalid-feedback">
                        {{ form_errors(form.status)|striptags }}
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-success" id="submitBtn">
                        <i class="ri-save-line me-1"></i>
                        Enregistrer
                    </button>
                    <a href="{{ path('gs-projet_project_index') }}" class="btn btn-secondary">
                        <i class="ri-arrow-left-line me-1"></i>
                        Retour
                    </a>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <!-- Libs Parsley -->
    <script src="{{ asset('/libs/parsleyjs/parsley.min.js') }}"></script>
    <script src="{{ asset('/libs/parsleyjs/i18n/fr.js') }}"></script>
    <!-- SweetAlert2 JS -->
    <script src="{{ asset('/libs/sweetalert2/sweetalert2.all.min.js') }}"></script>
    
<script>
document.getElementById('projectForm').addEventListener('submit', function (e) {
    e.preventDefault();

    const form = e.target;
    const url = form.action;
    const formData = new FormData(form);

    fetch(url, {
        method: 'POST',
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => response.json().then(data => ({status: response.status, body: data})))
    .then(({status, body}) => {
        if (status === 200) {
            Swal.fire({
                icon: 'success',
                title: 'Succès',
                text: body.message
            }).then(() => {
                window.location.href = "{{ path('gs-projet_project_index') }}";
            });
        } else if (status === 400) {
            // Affichage des erreurs
            for (const [field, messages] of Object.entries(body.errors)) {
                const input = document.querySelector(`[name$="[${field}]"]`);
                if (input) {
                    input.classList.add('is-invalid');
                    let feedback = input.closest('.mb-3').querySelector('.invalid-feedback');
                    if (feedback) {
                        feedback.textContent = messages.join(', ');
                    }
                }
            }

            document.querySelector('.alert.alert-warning').classList.remove('d-none');
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Erreur',
                text: body.message || 'Une erreur est survenue.'
            });
        }
    })
    .catch(error => {
        console.error('Erreur :', error);
        Swal.fire({
            icon: 'error',
            title: 'Erreur',
            text: 'Une erreur inattendue est survenue.'
        });
    });
});
</script>

{% endblock %}