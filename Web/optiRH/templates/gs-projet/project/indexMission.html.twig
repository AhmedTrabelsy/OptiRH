{% extends 'partials/layout-horizontal.html.twig' %}

{% block title %}Calendrier des Missions{% endblock %}

{% block css %}
<link href="{{ asset('libs/fullcalendar/main.min.css') }}" rel="stylesheet">
<style>
    #calendar {
        min-height: 600px;
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1rem rgba(67, 110, 238, 0.84);
    }
    .fc-event {
        cursor: pointer;
        transition: all 0.2s;
        border: none !important;
    }
    .fc-daygrid-event-dot {
        display: none !important;
    }
    .mission-info-item label {
        font-weight: 500;
        color:rgb(69, 123, 178);
    }
</style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div id="calendar"></div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="missionModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Détails de la Mission</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form id="statusForm">
                <div class="modal-body">
                    <input type="hidden" id="missionId" name="id">
                    
                    <div class="mb-3">
                        <label class="form-label">Titre</label>
                        <div class="form-control-plaintext fw-bold" id="missionTitle"></div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <div class="border rounded p-2" id="missionDescription" style="min-height: 100px;"></div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Échéance</label>
                        <div class="form-control-plaintext" id="missionDeadline"></div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Statut</label>
                        <select class="form-select" id="statusSelect" name="status">
                            <option value="To Do">À faire</option>
                            <option value="In Progress">En cours</option>
                            <option value="Done">Terminé</option>
                        </select>
                    </div>

                    <input type="hidden" name="_token" value="{{ csrf_token('mission_status') }}">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-2"></i>Enregistrer
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block javascript %}
<script src="{{ asset('libs/moment/min/moment-with-locales.min.js') }}"></script>
<script src="{{ asset('libs/fullcalendar/main.min.js') }}"></script>
<script src="{{ asset('libs/fullcalendar/locales/fr.global.min.js') }}"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const calendarEl = document.getElementById('calendar');
    const modal = new bootstrap.Modal('#missionModal');
    let currentEvent = null;

    const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        locale: 'fr',
        themeSystem: 'bootstrap5',
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        events: {{ missions|json_encode|raw }},
        eventColor: '#3b7ddd',
        eventTimeFormat: {
            hour: '2-digit',
            minute: '2-digit',
            meridiem: false
        },
        eventDidMount: function(info) {
            const status = info.event.extendedProps.statut;
            let color = '#6c757d';
            
            switch(status) {
                case 'Done': color = '#28a745'; break;
                case 'In Progress': color = '#ffc107'; break;
                case 'To Do': color = '#dc3545'; break;
            }
            
            info.el.style.backgroundColor = color;
            info.el.style.borderColor = color;
        },
        eventClick: function(info) {
            currentEvent = info.event;
            const startDate = info.event.start;
            const daysRemaining = Math.ceil((startDate - new Date()) / (1000 * 3600 * 24));

            document.getElementById('missionId').value = info.event.id;
            document.getElementById('missionTitle').textContent = info.event.title;
            document.getElementById('missionDescription').textContent = info.event.extendedProps.description;
            document.getElementById('statusSelect').value = info.event.extendedProps.statut;
            
            const deadlineElement = document.getElementById('missionDeadline');
            deadlineElement.innerHTML = `
                ${moment(startDate).format('dddd D MMMM YYYY')}<br>
                <span class="fw-bold ${daysRemaining < 0 ? 'text-danger' : 'text-success'}">
                    ${Math.abs(daysRemaining)} jour${Math.abs(daysRemaining) > 1 ? 's' : ''} 
                    ${daysRemaining >= 0 ? 'restant' : 'de retard'}
                </span>
            `;

            modal.show();
        }
    });

    calendar.render();

    document.getElementById('statusForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const payload = {
            id: formData.get('id'),
            status: formData.get('status'),
            _token: formData.get('_token')
        };

        try {
            const response = await fetch("{{ path('gs-projet_project_missions_update_status', { id: 'MISSION_ID' }) }}".replace('MISSION_ID', payload.id), {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify(payload)
            });

            if (!response.ok) throw new Error(await response.text());
            
            const data = await response.json();
            
            Swal.fire({
                icon: 'success',
                title: 'Succès !',
                text: 'Statut mis à jour. Avec Success...',
                timer: 500,
                showConfirmButton: false
            });

            setTimeout(() => {
                window.location.reload();
            }, 500);

        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Erreur',
                text: 'Échec de la mise à jour : ' + error.message
            });
        }
    });
});
</script>
{% endblock %}