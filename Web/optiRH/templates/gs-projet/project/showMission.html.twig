{% extends 'partials/layout-vertical.html.twig' %}

{% block title %}Détails mission - {{ mission.titre }}{% endblock %}

{% block css %}
    <!-- Plugins css -->
    <link href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css" rel="stylesheet">
    <link href="/libs/dropzone/min/dropzone.min.css" rel="stylesheet" type="text/css"/>
    <link href="/libs/bootstrap-tagsinput/bootstrap-tagsinput.css" rel="stylesheet"/>
    <link href="/libs/multiselect/css/multi-select.css" rel="stylesheet" type="text/css"/>
    <link href="/libs/select2/css/select2.min.css" rel="stylesheet" type="text/css"/>
    <link href="/libs/selectize/css/selectize.bootstrap3.css" rel="stylesheet" type="text/css"/>
{% endblock %}

{% block topbar %}
    {{ include('partials/topbar.html.twig', {
        page_title: 'Détails mission',
        breadcrumb: [
            { label: 'Projets', path: path('gs-projet_project_index') },
            { label: project.nom, path: path('gs-projet_project_mission_show', {id: project.id}) },
            { label: mission.titre }
        ]
    }) }}
{% endblock %}

{% block body %}
<div class="row">
    <div class="col-md-12">
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endfor %}
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body task-detail">
                <div class="dropdown float-end">
                    <a href="#" class="dropdown-toggle arrow-none card-drop" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="mdi mdi-dots-vertical"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-end">
                        <a href="{{ path('gs-projet_project_mission_edit', {'id': mission.id}) }}" class="dropdown-item">
                            <i class="ri-edit-line me-1"></i>Modifier
                        </a>
                        <form method="post" action="{{ path('gs-projet_project_mission_delete', {'id': mission.id}) }}" class="d-inline">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ mission.id) }}">
                            <button type="button" class="dropdown-item text-danger delete-mission" data-name="{{ mission.titre }}">
                                <i class="ri-delete-bin-line me-1"></i>Supprimer
                            </button>
                        </form>
                    </div>
                </div>

                <div class="d-flex mb-3 align-items-center">
                    <div class="flex-grow-1">
                        <h2 class="media-heading mt-0">{{ mission.titre }}</h2>
                        <span class="badge bg-{{ mission.status == 'Terminé' ? 'success' : 'warning' }} rounded-pill">
                            {{ mission.status }}
                        </span>
                    </div>
                </div>

                <div class="mb-4">
                    <h4>Description de la mission</h4>
                    <p class="text-muted">{{ mission.description|default('Aucune description fournie') }}</p>
                </div>

                <div class="row task-dates mb-0">
                    <div class="col-lg-6">
                        <h5 class="font-600 m-b-5">Date de création</h5>
                        <p class="text-muted">
                            {{ mission.createdAt|date('d/m/Y') }}
                            <small class="d-block">{{ mission.createdAt|date('H:i') }}</small>
                        </p>
                    </div>

                    <div class="col-lg-6">
                        <h5 class="font-600 m-b-5">Date limite</h5>
                        <p class="text-muted">
                            {{ mission.dateTerminer|date('d/m/Y') }}
                            <small class="d-block">{{ mission.dateTerminer|date('H:i') }}</small>
                        </p>
                    </div>
                </div>

                <div class="assign-team mt-4">
                    <h5>Assigné à</h5>
                    <div class="d-flex align-items-center">
                        {% if mission.assignedTo %}
                            <div class="avatar me-3">
                                <span class="avatar-title rounded-circle bg-soft-primary text-primary">
                                    {{ mission.assignedTo.nom|first|upper }}
                                </span>
                            </div>
                            <div>
                                <h6 class="mb-0">{{ mission.assignedTo.nom }}</h6>
                                <small class="text-muted">
                                    {% set role = mission.assignedTo.roles[0]|default('ROLE_USER') %}
                                    {% if role == 'ROLE_ADMIN' %}
                                        Administrateur
                                    {% elseif role == 'ROLE_EMPLOYEE' %}
                                        Employee
                                    {% elseif role == 'ROLE_USER' %}
                                        Utilisateur
                                    {% else %}
                                        {{ role }}
                                    {% endif %}
                                </small>
                            </div>
                        {% else %}
                            <span class="text-muted">Non assigné</span>
                        {% endif %}
                    </div>
                </div>

                {% if is_granted('ROLE_ADMIN') %}
                <div class="row mt-4">
                    <div class="col-sm-12 text-end">
                        <a href="{{ path('gs-projet_project_mission_edit', {'id': mission.id}) }}" class="btn btn-warning me-2">
                            <i class="ri-edit-line me-1"></i> Modifier
                        </a>
                        <button type="button" class="btn btn-info me-2" id="sendMeetInvitation">
                            <i class="ri-mail-send-line me-1"></i>invitation Meet
                        </button>
                        <form method="post" action="{{ path('gs-projet_project_mission_delete', {'id': mission.id}) }}" class="d-inline">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ mission.id) }}">
                            <button type="button" class="btn btn-danger delete-mission" data-name="{{ mission.titre }}">
                                <i class="ri-delete-bin-line me-1"></i> Supprimer
                            </button>
                        </form>
                    </div>
                </div>
                {% endif %}
            </div>
        </div>
    </div>
               

    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h4 class="header-title mt-0 mb-3">Dernières mises à jour</h4>
                <div class="text-muted">
                    <div class="mb-3">
                        <h5 class="font-600 m-b-5">Dernière modification</h5>
                        <p>{{ mission.updatedAt|date('d/m/Y H:i') }}</p>
                    </div>
                    {% if mission.dateTerminer %}
                        <div class="mb-3">
                            <h5 class="font-600 m-b-5">Jours restants</h5>
                            <p class="text-{{ date() < mission.dateTerminer ? 'success' : 'danger' }}">
                                {{ mission.dateTerminer.diff(date('now')).days }} jours
                            </p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascript %}
    <!-- Plugins js -->
    <script src="/libs/selectize/js/standalone/selectize.min.js"></script>
    <script src="/libs/dropzone/min/dropzone.min.js"></script>
    <script src="/libs/multiselect/js/jquery.multi-select.js"></script>
    <script src="/libs/select2/js/select2.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Gestion des notifications
            {% for label, messages in app.flashes %}
                {% for message in messages %}
                    Swal.fire({
                        icon: '{{ label == 'success' ? 'success' : (label == 'error' ? 'error' : 'info') }}',
                        title: '{{ message|e('js') }}',
                        showConfirmButton: false,
                        timer: 2500
                    });
                {% endfor %}
            {% endfor %}

            // Gestion de la suppression des missions
            document.querySelectorAll('.delete-mission').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const form = this.closest('form');
                    const missionName = this.dataset.name;

                    Swal.fire({
                        title: 'Confirmer la suppression',
                        html: `Êtes-vous sûr de vouloir supprimer <strong>"${missionName}"</strong> ?<br>Cette action est irréversible.`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Oui, supprimer',
                        cancelButtonText: 'Annuler',
                        customClass: {
                            confirmButton: 'btn btn-danger me-2',
                            cancelButton: 'btn btn-secondary'
                        },
                        buttonsStyling: false
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                });
            });

            // Gestion de l'envoi d'invitation Meet
            document.getElementById('sendMeetInvitation')?.addEventListener('click', function() {
                // Calculer la date/heure minimale (maintenant)
                const now = new Date();
                // Format YYYY-MM-DDTHH:MM (format attendu par datetime-local)
                const minDateTime = now.toISOString().slice(0, 16);
                
                // Créer une popup pour sélectionner la date et l'heure de la réunion
                Swal.fire({
                    title: 'Planifier la réunion',
                    html: `
                        <div style="margin-top: 20px;">
                            <label for="meetDateTime" style="display: block; margin-bottom: 8px; font-weight: bold;">Date et heure de la réunion:</label>
                            <input type="datetime-local" 
                                   id="meetDateTime" 
                                   class="swal2-input" 
                                   min="${minDateTime}"
                                   required>
                            <small class="text-muted">Veuillez sélectionner une date/heure future</small>
                        </div>
                    `,
                    showCancelButton: true,
                    confirmButtonText: 'Envoyer l\'invitation',
                    cancelButtonText: 'Annuler',
                    focusConfirm: false,
                    preConfirm: () => {
                        const dateTimeInput = Swal.getPopup().querySelector('#meetDateTime');
                        const meetDateTime = dateTimeInput.value;
                        
                        if (!meetDateTime) {
                            Swal.showValidationMessage('Veuillez sélectionner une date et une heure');
                            return false;
                        }
                        
                        // Vérification supplémentaire au cas où le navigateur ne respecterait pas l'attribut min
                        const selectedDate = new Date(meetDateTime);
                        if (selectedDate < now) {
                            Swal.showValidationMessage('Veuillez sélectionner une date/heure future');
                            return false;
                        }
                        
                        return { meetDateTime: meetDateTime };
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        const formData = new URLSearchParams();
                        formData.append('meetDateTime', result.value.meetDateTime);
                        
                        // Envoi avec la date/heure de la réunion
                        fetch('{{ path('gs-projet_project_mission_send_invitation', {'id': mission.id}) }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Invitation envoyée',
                                    text: data.message,
                                    timer: 2000,
                                    showConfirmButton: false
                                });
                            } else {
                                Swal.fire('Erreur', data.message, 'error');
                            }
                        })
                        .catch(error => {
                            Swal.fire('Erreur', 'Une erreur est survenue lors de l\'envoi', 'error');
                            console.error(error);
                        });
                    }
                });
            });
        });
    </script>
{% endblock %}