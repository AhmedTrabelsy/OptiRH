{% extends 'partials/layout-vertical.html.twig' %}

{% block title %}Dashboard Admin{% endblock %}

{% block css %}
    <!-- CSS Resources -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="/libs/morris.js06/morris.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
    <link rel="stylesheet" href="https://www.gstatic.com/charts/loader.js">
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #1cc88a;
            --danger-color: #e74a3b;
            --warning-color: #f6c23e;
            --info-color: #36b9cc;
            --light-color: #f8f9fc;
            --dark-color: #2d3748;
            --border-radius: 12px;
            --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease;
            --mission-primary: #4a6bdf;
            --mission-secondary: #20c997;
            --mission-danger: #ff6b6b;
            --mission-warning: #ffd43b;
            --mission-info: #66d9e8;
            --mission-light: #f8f9fa;
            --mission-dark: #343a40;
            --mission-border-radius: 12px;
            --mission-box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --mission-transition: all 0.3s ease;
        }

        /* Loading Overlay */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 9999;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            display: none;
            backdrop-filter: blur(5px);
        }

        .loading-overlay .spinner-border {
            width: 3.5rem;
            height: 3.5rem;
            border-width: 0.25em;
        }

        /* Card Style */
        .card-style {
            background: #fff;
            border-radius: var(--border-radius);
            border: none;
            box-shadow: var(--box-shadow);
            transition: var(--transition);
            overflow: hidden;
            margin-bottom: 1.5rem;
        }

        .card-style:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
        }

        .card-header-style {
            background: linear-gradient(135deg, #f8f9fc, #e2e8f0);
            border-bottom: none;
            padding: 1rem 1.5rem;
            font-weight: 700;
            color: var(--dark-color);
            font-size: 1.1rem;
        }

        /* Stats Cards */
        .admin-stats {
            display: flex;
            justify-content: space-between;
            gap: 1.5rem;
            margin-bottom: 2rem;
            width: 100%;
        }

        /* Cartes individuelles */
        .stat-card {
            flex: 1;
            min-width: 0;
            text-align: center;
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            transition: var(--transition);
        }

        .stat-card h3 {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 800;
            color: var(--primary-color);
            line-height: 1.2;
        }

        .stat-card:nth-child(2) .stat-value {
            color: var(--secondary-color);
        }

        .stat-card:nth-child(3) .stat-value {
            color: var(--danger-color);
        }

        /* Charts Section */
        .chart-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .chart-wrapper {
            composes: card-style;
            padding: 1.5rem;
            background: linear-gradient(135deg, #ffffff, #f7fafc);
        }

        .chart-wrapper h3 {
            font-size: 1.3rem;
            font-weight: 700;
            color: var(--dark-color);
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        /* Mission Charts Section */
        .mission-chart-container {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .mission-chart-wrapper {
            flex: 1 1 48%;
            min-width: 300px;
            background: white;
            border-radius: var(--mission-border-radius);
            box-shadow: var(--mission-box-shadow);
            padding: 1.5rem;
            transition: var(--mission-transition);
        }

        .mission-chart-wrapper:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .mission-chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .mission-chart-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--mission-dark);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .mission-chart-period {
            font-size: 0.85rem;
            color: #6c757d;
        }

        .mission-chart-canvas {
            width: 100%;
            height: 300px;
            position: relative;
        }

        /* Late Missions Section */
        .late-items {
            composes: card-style;
            padding: 1.5rem;
            background: #fff;
        }

        .late-items h3 {
            font-size: 1.3rem;
            font-weight: 700;
            color: var(--dark-color);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .late-item {
            padding: 1rem;
            border-left: 4px solid var(--danger-color);
            margin-bottom: 0.75rem;
            background: #fef5f5;
            border-radius: 8px;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .late-item:hover {
            background: #fee2e2;
            transform: translateX(4px);
        }

        .late-item strong {
            font-weight: 600;
            color: var(--dark-color);
        }

        .late-item small {
            color: #6b7280;
            font-size: 0.9rem;
        }

        /* Analysis Section */
        .analysis-card {
            composes: card-style;
            padding: 1.5rem;
            background: #fff;
        }

        .analysis-card h3 {
            font-size: 1.3rem;
            font-weight: 700;
            color: var(--dark-color);
        }

        .gemini-analysis-container {
            font-family: 'Inter', sans-serif;
            line-height: 1.7;
            color: #1f2937;
        }

        .analysis-section {
            margin-bottom: 1.5rem;
            padding: 1.25rem;
            background: #f9fafb;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .analysis-section h3 {
            color: #1e40af;
            margin-bottom: 0.75rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e5e7eb;
        }

        .analysis-item {
            padding-left: 1.5rem;
            margin-bottom: 1rem;
            position: relative;
        }

        .analysis-item:before {
            content: "‚óè";
            position: absolute;
            left: 0;
            color: var(--primary-color);
            font-size: 0.8rem;
        }

        .analysis-error {
            padding: 1.5rem;
            border-radius: 8px;
            background: #f8d7da;
            border-left: 4px solid #dc3545;
        }

        .alert-danger {
            color: #721c24;
        }

        #analysisPlaceholder {
            min-height: 200px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: #f8fafc;
            border-radius: 8px;
            border: 2px dashed #d1d5db;
            animation: pulse 2s infinite;
        }

        #analysisPlaceholder i {
            font-size: 2.5rem;
            color: #9ca3af;
            margin-bottom: 1rem;
        }

        .generated-report {
            padding: 1.5rem;
            background: #f9fafb;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
            max-height: 500px;
            overflow-y: auto;
            font-size: 0.95rem;
        }

        /* Sparkline Section */
        .sparkline-card {
            composes: card-style;
            padding: 1.25rem;
            border-left: 4px solid var(--primary-color);
            background: linear-gradient(135deg, #ffffff, #f9fafb);
        }

        .sparkline-title {
            font-weight: 700;
            font-size: 1.1rem;
            color: var(--dark-color);
            margin-bottom: 1rem;
        }

        .sparkline-stats {
            font-size: 0.9rem;
            color: #6b7280;
            margin-bottom: 1rem;
            font-weight: 500;
        }

        .sparkline-container {
            height: 60px;
            margin-top: 1rem;
        }

        /* Workflow Table */
        .table-responsive table {
            background: #fff;
            border-radius: 8px;
            overflow: hidden;
        }

        .table-responsive th {
            background: #f8fafc;
            font-weight: 600;
            color: var(--dark-color);
            padding: 1rem;
        }

        .table-responsive tbody tr {
            transition: var(--transition);
        }

        .table-responsive tbody tr:hover {
            background: #f9fafc;
        }

        .table-responsive .progress {
            height: 12px;
            border-radius: 6px;
            background: #e5e7eb;
        }

        .table-responsive .progress-bar {
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
            transition: width 0.3s ease;
        }

        .table-responsive .badge {
            padding: 1rem 1rem;
            border-radius: 12px;
            font-weight: 600;
        }

        /* Styles pour les statistiques */
        .stats-container {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .stats-card {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
            flex: 1 1 calc(50% - 1.5rem);
            padding: 1.25rem 1.5rem;
            margin-bottom: 1.5rem;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .stats-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 10px 24px rgba(0, 0, 0, 0.08);
        }

        .stats-card-header {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 0.75rem;
            color: #333;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .stats-chart {
            width: 100%;
            height: 350px;
        }

        .summary-cards {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .summary-card {
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            flex: 1 1 200px;
            padding: 1rem;
            text-align: center;
        }

        .card-value {
            font-size: 2rem;
            font-weight: 700;
            margin: 0.5rem 0;
        }

        .positive {
            color: #28a745;
        }

        .negative {
            color: #dc3545;
        }

        .neutral {
            color: #6c757d;
        }

        .pending {
            color: #ffc107;
        }

        .in-progress {
            color: #17a2b8;
        }

        .resolved {
            color: #28a745;
        }

        @media (max-width: 768px) {
            .stats-card {
                flex: 1 1 100%;
            }
        }

        /* Flow Chart Styles */
        #flowchart-diagram {
            min-height: 300px;
            background: #f8f9fa;
            padding: 1rem;
            overflow: hidden;
        }

        #flowchart-diagram svg {
            width: 100%;
            height: 100%;
        }

        .start-node rect {
            fill: #4e73df !important;
        }

        .end-node rect {
            fill: #1cc88a !important;
        }

        .operation-node rect {
            fill: #f6c23e !important;
        }

        /* Buttons */
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            padding: 0.5rem 1.25rem;
            font-weight: 600;
        }

        .btn-primary:hover {
            background-color: #2e59d9;
            border-color: #2653d4;
        }

        .btn-success {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
        }

        /* Weather Section Styles */
        #weather {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .weather-card {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
            flex: 1 1 240px;
            padding: 1.25rem 1.5rem;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .weather-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 10px 24px rgba(0, 0, 0, 0.08);
        }

        .weather-card-header {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 0.75rem;
            color: #333;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .weather-card-body {
            font-size: 0.95rem;
            color: #555;
        }

        .weather-card img {
            vertical-align: middle;
            width: 36px;
            height: 36px;
        }

        .stats-card {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            text-align: center;
            transition: transform 0.2s ease;
        }

        .stats-card:hover {
            transform: translateY(-4px);
        }

        .stats-card i {
            font-size: 2rem;
            color: rgb(113, 182, 249);
            margin-bottom: 0.5rem;
        }

        .stats-card h4 {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 0.25rem 0;
        }

        .stats-card p {
            font-size: 0.9rem;
            color: #555;
            margin: 0;
        }

        /* Animations */
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-out forwards;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(8px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes fadeInMission {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .mission-fade-in {
            animation: fadeInMission 0.5s ease-out forwards;
        }

        /* Responsive Adjustments */
        @media (max-width: 992px) {
            .chart-container {
                grid-template-columns: 1fr;
            }

            .admin-stats {
                grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
            }

            .mission-chart-wrapper {
                flex: 1 1 100%;
            }
        }

        @media (max-width: 768px) {
            .stat-value {
                font-size: 2rem;
            }

            .chart-wrapper {
                min-height: 320px;
            }

            .late-item {
                flex-direction: column;
                align-items: flex-start;
            }

            .mission-chart-title {
                font-size: 1.1rem;
            }
        }

        /* Styles pour les statistiques des r√©clamations */
        .stats-card {
            border-radius: 12px;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            overflow: hidden;
            height: 100%;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 24px rgba(0,0,0,0.12);
        }
        
        .stats-card .card-header {
            background-color: var(--primary-color);
            color: white;
            padding: 16px;
            border-bottom: none;
        }
        
        .stats-card .card-body {
            padding: 20px;
        }
        
        .chart-container {
            width: 100%;
            height: 300px;
            margin: 0 auto;
        }
        
        .key-metric {
            text-align: center;
            padding: 20px;
            border-radius: 10px;
            background: linear-gradient(to right, var(--light-color), white);
            margin-bottom: 20px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        }
        
        .metric-value {
            font-size: 2.8rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0;
        }
        
        .metric-label {
            color: var(--dark-color);
            font-size: 1rem;
            opacity: 0.8;
        }
        
        /* Indicateurs de type */
        .type-indicator {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            margin-right: 5px;
            margin-bottom: 5px;
        }
        
        .type-salaire { background-color: #ffeaa7; color: #d35400; }
        .type-conges { background-color: #d6eaff; color: #0984e3; }
        .type-relations { background-color: #e3f9e5; color: #00b894; }
        .type-conditions { background-color: #ffd3d3; color: #e74c3c; }
        .type-remuneration { background-color: #e9dbff; color: #6c5ce7; }
        
        /* Styles pour l'affichage de sentiments */
        .sentiment-badge {
            display: inline-flex;
            align-items: center;
            padding: 8px 12px;
            border-radius: 20px;
            margin-right: 10px;
            margin-bottom: 10px;
            font-weight: 600;
        }
        
        .sentiment-badge.positive {
            background-color: rgba(46, 204, 113, 0.2);
            color: #27ae60;
        }
        
        .sentiment-badge.neutral {
            background-color: rgba(243, 156, 18, 0.2);
            color: #d35400;
        }
        
        .sentiment-badge.negative {
            background-color: rgba(231, 76, 60, 0.2);
            color: #c0392b;
        }
        
        .sentiment-icon {
            margin-right: 8px;
            font-size: 1.2em;
        }
    </style>
    {{ parent() }}
{% endblock %}

{% block topbar %}
    {{ include('partials/topbar.html.twig', { page_title: 'Tableau de Bord Admin' }) }}
{% endblock %}

{% block body %}
    <!-- Global Loading Overlay -->
    <div class="loading-overlay" id="globalLoading">
        <div class="spinner-border" role="status"></div>
        <span class="mt-3">Traitement en cours...</span>
    </div>

    {# Hello widget #}
    <div class="weather-card mt-3 d-flex justify-content-between">
        <div>
            <h3><span style="font-weight: normal;">Bonjour </span><strong>{{ app.user.nom|default('Utilisateur') }}</strong> !</h3>
        </div>
        <div>
            <a href="{{ path('app_logout') }}" class="btn btn-logout">
                <i class="fas fa-sign-out-alt"></i> D√©connexion
            </a>
        </div>
    </div>

    {# Weather widget #}
    <div id="weather">
        <div class="weather-card">
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Chargement...</span>
                </div>
                <p>Chargement des donn√©es m√©t√©o...</p>
            </div>
        </div>
    </div>

    {# Administration Section #}
    <h3 class="m-2"><i class="fas fa-cog"></i> Administration</h3>
    <div class="summary-cards">
        <div class="summary-card stats-card">
            <i class="fas fa-users"></i>
            <h4>{{ adminStats.total_users }}</h4>
            <p>Utilisateurs totaux</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-user-shield"></i>
            <h4>{{ adminStats.admin_users }}</h4>
            <p>Administrateurs</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-user"></i>
            <h4>{{ adminStats.standard_users }}</h4>
            <p>Employ√©s</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-check-circle"></i>
            <h4>{{ adminStats.verified_users }}</h4>
            <p>Utilisateurs v√©rifi√©s</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-user-plus"></i>
            <h4>{{ adminStats.recent_users }}</h4>
            <p>Inscriptions r√©centes (30 jours)</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-user-times"></i>
            <h4>{{ adminStats.pending_verification }}</h4>
            <p>V√©rifications en attente</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-sync-alt"></i>
            <h4>{{ adminStats.recently_updated }}</h4>
            <p>Comptes r√©cemment mis √† jour (30 jours)</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-hourglass-half"></i>
            <h4>{{ adminStats.average_account_age|round(0, 'floor') }} jours</h4>
            <p>√Çge moyen des comptes</p>
        </div>
    </div>

    <hr>

    <!-- Stats Cards -->
    <h3 class="mt-5"><i class="fas fa-chart-bar"></i> Projets et Missions</h3>
    <div class="admin-stats">
        <div class="stat-card">
            <h3><i class="fas fa-project-diagram me-2"></i> Projets Totaux</h3>
            <p class="stat-value">
                {% set total_projects = 0 %}
                {% for status, count in project_stats %}
                    {% set total_projects = total_projects + count %}
                {% endfor %}
                {{ total_projects }}
            </p>
        </div>
        <div class="stat-card">
            <h3><i class="fas fa-tasks me-2"></i> Missions Totales</h3>
            <p class="stat-value">
                {% set total_missions = 0 %}
                {% for status, count in mission_stats %}
                    {% set total_missions = total_missions + count %}
                {% endfor %}
                {{ total_missions }}
            </p>
        </div>
        <div class="stat-card">
            <h3><i class="fas fa-exclamation-triangle me-2"></i> Missions en Retard</h3>
            <p class="stat-value">{{ delayed_missions|length }}</p>
        </div>
    </div>

    <!-- Projects and Missions Charts -->
    <div class="chart-container">
        <div class="mission-chart-container">
            <div class="mission-chart-wrapper mission-fade-in">
                <div class="mission-chart-header">
                    <h3 class="mission-chart-title"><i class="fas fa-chart-pie"></i> R√©partition par Statut</h3>
                    <span class="mission-chart-period">Mise √† jour: {{ "now"|date("d/m/Y H:i") }}</span>
                </div>
                <div class="mission-chart-canvas">
                    <canvas id="missionStatusChart" height="300"></canvas>
                </div>
            </div>
            <div class="mission-chart-wrapper mission-fade-in">
                <div class="mission-chart-header">
                    <h3 class="mission-chart-title"><i class="fas fa-chart-line"></i> √âvolution Mensuelle</h3>
                    <span class="mission-chart-period">6 derniers mois</span>
                </div>
                <div class="mission-chart-canvas">
                    <canvas id="missionTimelineChart" height="300"></canvas>
                </div>
            </div>
            <div class="mission-chart-wrapper mission-fade-in">
                <div class="mission-chart-header">
                    <h3 class="mission-chart-title"><i class="fas fa-chart-bar"></i> R√©partition par Projet</h3>
                    <span class="mission-chart-period">Toutes les missions</span>
                </div>
                <div class="mission-chart-canvas">
                    <canvas id="missionProjectDistribution" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Late Missions Section -->
    <div class="late-items fade-in">
        <h3><i class="fas fa-exclamation-triangle text-danger me-2"></i> Missions en retard ({{ delayed_missions|length }})</h3>
        {% if delayed_missions is empty %}
            <div class="alert alert-success d-flex align-items-center">
                <i class="fas fa-check-circle me-2"></i>
                <span>Aucune mission en retard</span>
            </div>
        {% else %}
            {% for mission in delayed_missions %}
                <div class="late-item">
                    <i class="fas fa-tasks text-danger"></i>
                    <div>
                        <strong>{{ mission.titre }}</strong> -
                        <span class="badge bg-{{ mission.status == 'Done' ? 'success' : 'danger' }}">
                            {{ mission.status }}
                        </span>
                        <br>
                        <small>Projet: {{ mission.project.nom }} ‚Ä¢ Date limite: {{ mission.dateTerminer|date('d/m/Y') }}</small>
                    </div>
                </div>
            {% endfor %}
        {% endif %}
    </div>

    <!-- Recruitment Section -->
    <h3 class="mt-5"><i class="fas fa-users"></i> Recrutement</h3>
    <div class="summary-cards">
        <div class="summary-card stats-card">
            <i class="fas fa-file-alt"></i>
            <h4>{{ recruitment_stats.total_demandes }}</h4>
            <p>Demandes totales</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-check-circle"></i>
            <h4>{{ recruitment_stats.accepted_demandes }}</h4>
            <p>Demandes accept√©es</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-bullhorn"></i>
            <h4>{{ recruitment_stats.active_offres }}</h4>
            <p>Offres actives</p>
        </div>
        <div class="summary-card stats-card">
            <i class="fas fa-clock"></i>
            <h4>{{ recruitment_stats.avg_processing_time }} jours</h4>
            <p>Temps moyen de traitement</p>
        </div>
    </div>

    <!-- Recruitment Charts -->
    <div class="chart-container">
        <div class="chart-wrapper fade-in">
            <h3><i class="fas fa-chart-pie me-2"></i> Demandes par statut</h3>
            <canvas id="recruitmentStatusChart" height="350"></canvas>
        </div>
        <div class="chart-wrapper fade-in">
            <h3><i class="fas fa-chart-bar me-2"></i> Offres par type de contrat</h3>
            <canvas id="recruitmentContractChart" height="350"></canvas>
        </div>
        <div class="chart-wrapper fade-in">
            <h3><i class="fas fa-chart-bar me-2"></i> √âvolution des demandes</h3>
            <canvas id="recruitmentEvolutionChart" height="350"></canvas>
        </div>
    </div>

    <!-- Section R√©clamations (isol√©e) -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-primary text-white">
                    <h6 class="m-0 font-weight-bold">
                        <i class="fas fa-chart-pie me-2"></i>Statistiques des r√©clamations
                    </h6>
                </div>
                <div class="card-body">
                    <!-- KPI majeur: Taux de r√©solution -->
                    <div class="key-metric animate__animated animate__fadeInUp" style="animation-delay: 0.2s">
                        <h4 class="metric-value">{{ resolutionRate }}%</h4>
                        <p class="metric-label">Taux de r√©solution global</p>
                    </div>
                    
                    <!-- Premi√®re rang√©e de graphiques -->
                    <div class="row gy-4 mb-4">
                        <!-- Statistiques par statut -->
                        <div class="col-md-6 animate__animated animate__fadeInUp" style="animation-delay: 0.3s">
                            <div class="stats-card">
                                <div class="card-header">
                                    <h6 class="m-0"><i class="fas fa-tasks me-2"></i>R√©partition par statut</h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="statusChart" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Statistiques par sentiment -->
                        <div class="col-md-6 animate__animated animate__fadeInUp" style="animation-delay: 0.4s">
                            <div class="stats-card">
                                <div class="card-header">
                                    <h6 class="m-0"><i class="fas fa-smile me-2"></i>Analyse des sentiments</h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="sentimentChart" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Deuxi√®me rang√©e de graphiques -->
                    <div class="row gy-4 mb-4">
                        <!-- Statistiques par type -->
                        <div class="col-md-6 animate__animated animate__fadeInUp" style="animation-delay: 0.5s">
                            <div class="stats-card">
                                <div class="card-header">
                                    <h6 class="m-0"><i class="fas fa-tags me-2"></i>R√©partition par type</h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="typeChart" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                        
                        <!-- √âvolution dans le temps -->
                        <div class="col-md-6 animate__animated animate__fadeInUp" style="animation-delay: 0.6s">
                            <div class="stats-card">
                                <div class="card-header">
                                    <h6 class="m-0"><i class="fas fa-chart-line me-2"></i>√âvolution par minute</h6>
                                </div>
                                <div class="card-body">
                                    <canvas id="timelineChart" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sparkline Section -->
    <div class="card card-style mt-4">
        <div class="card-header-style">
            <h4 class="mb-0"><i class="fas fa-chart-line me-2"></i> Progression des missions par projet</h4>
        </div>
        <div class="card-body">
            <div class="row">
                {% for project in projects %}
                    <div class="col-md-4 mb-4">
                        <div class="sparkline-card fade-in">
                            <div class="sparkline-title">{{ project.entity.nom }}</div>
                            <div class="sparkline-stats">
                                {{ project.done_missions }} termin√©es / {{ project.total_missions }} total
                            </div>
                            <div class="sparkline-container">
                                <span class="project-sparkline" data-sparkline="{{ project.sparkline_data|join(',') }}"></span>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>

    <!-- Flow Chart Section -->
    <div class="card card-style mt-4">
        <div class="card-header-style">
            <h4 class="mb-0"><i class="fas fa-project-diagram me-2"></i> Workflow des Projets</h4>
        </div>
        <div class="card-body">
            <div class="mt-4">
                <h5 class="mb-3"><i class="fas fa-tasks me-2"></i> Progression d√©taill√©e par projet</h5>
                <div class="table-responsive">
                    <table class="table table-hover table-sm">
                        <thead>
                            <tr>
                                <th>Projet</th>
                                <th>Progression</th>
                                <th class="text-center">Missions Termin√©es</th>
                                <th class="text-center">Total Missions</th>
                                <th class="text-center">Statut</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for project in projects %}
                                {% set completion = project.done_missions > 0 ? (project.done_missions / project.total_missions * 100)|round : 0 %}
                                <tr>
                                    <td>{{ project.entity.nom }}</td>
                                    <td style="width: 40%;">
                                        <div class="progress" title="{{ completion }}% termin√©">
                                            <div class="progress-bar {{ completion < 30 ? 'bg-danger' : (completion < 70 ? 'bg-warning' : 'bg-success') }}"
                                                 role="progressbar"
                                                 style="width: {{ completion }}%;"
                                                 aria-valuenow="{{ completion }}"
                                                 aria-valuemin="0"
                                                 aria-valuemax="100">
                                            </div>
                                        </div>
                                        <small class="text-muted">{{ completion }}% termin√©</small>
                                    </td>
                                    <td class="text-center">{{ project.done_missions }}</td>
                                    <td class="text-center">{{ project.total_missions }}</td>
                                    <td class="text-center">
                                        {% if completion == 100 %}
                                            <span class="badge bg-success">Termin√©</span>
                                        {% elseif completion >= 70 %}
                                            <span class="badge bg-primary">Avanc√©</span>
                                        {% elseif completion >= 30 %}
                                            <span class="badge bg-warning">En cours</span>
                                        {% else %}
                                            <span class="badge bg-danger">D√©marrage</span>
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Analysis Section -->
    <div class="analysis-card fade-in">
        <div class="card-header-style d-flex justify-content-between align-items-center">
            <h3 class="mb-0">
                <i class="fas fa-robot me-2"></i> Analyse Intelligente
            </h3>
            <button id="generateAnalysis" class="btn btn-primary">
                <i class="fas fa-magic me-1"></i> G√©n√©rer le Rapport
            </button>
        </div>
        <div class="analysis-content" id="geminiAnalysisContent">
            <div class="text-center py-5" id="analysisPlaceholder">
                <i class="fas fa-robot"></i>
                <p class="mt-3 mb-0">G√©n√©rez une analyse intelligente en un clic</p>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Initialisation des graphiques...');
            
            // Charts pour les missions
            const missionStatusCtx = document.getElementById('missionStatusChart');
            if (missionStatusCtx) {
                console.log('Donn√©es de statut des missions:', {
                    inProgress: {{ mission_stats['In Progress']|default(0) }},
                    done: {{ mission_stats['Done']|default(0) }},
                    pending: {{ mission_stats['Pending']|default(0) }}
                });
                
                new Chart(missionStatusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['En cours', 'Termin√©es', 'En attente'],
                        datasets: [{
                            data: [
                                {{ mission_stats['In Progress']|default(0) }},
                                {{ mission_stats['Done']|default(0) }},
                                {{ mission_stats['Pending']|default(0) }}
                            ],
                            backgroundColor: ['#3498db', '#2ecc71', '#f39c12']
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right'
                            }
                        }
                    }
                });
            } else {
                console.error('Canvas missionStatusChart non trouv√©');
            }

            const missionTimelineCtx = document.getElementById('missionTimelineChart');
            if (missionTimelineCtx) {
                const timelineData = {{ mission_timeline_data|json_encode|raw }};
                console.log('Donn√©es de timeline des missions:', timelineData);
                
                const timelineLabels = Object.keys(timelineData);
                const createdData = Object.values(timelineData).map(item => item.created);
                const completedData = Object.values(timelineData).map(item => item.completed);
                
                new Chart(missionTimelineCtx, {
                    type: 'line',
                    data: {
                        labels: timelineLabels,
                        datasets: [
                            {
                                label: 'Missions cr√©√©es',
                                data: createdData,
                                borderColor: '#3498db',
                                tension: 0.4
                            },
                            {
                                label: 'Missions termin√©es',
                                data: completedData,
                                borderColor: '#2ecc71',
                                tension: 0.4
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top'
                            }
                        }
                    }
                });
            } else {
                console.error('Canvas missionTimelineChart non trouv√©');
            }

            const missionProjectCtx = document.getElementById('missionProjectDistribution');
            if (missionProjectCtx) {
                const projectData = {{ projects|json_encode|raw }};
                console.log('Donn√©es des projets:', projectData);
                
                const projectLabels = projectData.map(project => project.entity.nom);
                const projectCounts = projectData.map(project => project.total_missions);
                
                new Chart(missionProjectCtx, {
                    type: 'bar',
                    data: {
                        labels: projectLabels,
                        datasets: [{
                            label: 'Missions par projet',
                            data: projectCounts,
                            backgroundColor: '#3498db'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            } else {
                console.error('Canvas missionProjectDistribution non trouv√©');
            }

            // Charts pour le recrutement
            const recruitmentStatusCtx = document.getElementById('recruitmentStatusChart');
            if (recruitmentStatusCtx) {
                const totalDemandes = {{ recruitment_stats.total_demandes }};
                const acceptedDemandes = {{ recruitment_stats.accepted_demandes }};
                const pendingDemandes = totalDemandes - acceptedDemandes;
                
                console.log('Statistiques de recrutement:', {
                    total: totalDemandes,
                    accepted: acceptedDemandes,
                    pending: pendingDemandes
                });
                
                new Chart(recruitmentStatusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Accept√©es', 'En attente'],
                        datasets: [{
                            data: [acceptedDemandes, pendingDemandes],
                            backgroundColor: ['#2ecc71', '#f39c12']
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right'
                            }
                        }
                    }
                });
            } else {
                console.error('Canvas recruitmentStatusChart non trouv√©');
            }

            const recruitmentContractCtx = document.getElementById('recruitmentContractChart');
            if (recruitmentContractCtx) {
                console.log('Offres actives:', {{ recruitment_stats.active_offres }});
                
                new Chart(recruitmentContractCtx, {
                    type: 'bar',
                    data: {
                        labels: ['Offres actives'],
                        datasets: [{
                            label: 'Nombre d\'offres',
                            data: [{{ recruitment_stats.active_offres }}],
                            backgroundColor: '#3498db'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            } else {
                console.error('Canvas recruitmentContractChart non trouv√©');
            }

            const recruitmentEvolutionCtx = document.getElementById('recruitmentEvolutionChart');
            if (recruitmentEvolutionCtx) {
                console.log('Timeline des demandes:', {{ demande_timeline|json_encode|raw }});
                
                new Chart(recruitmentEvolutionCtx, {
                    type: 'line',
                    data: {
                        labels: {{ demande_timeline|map(item => item.month)|json_encode|raw }},
                        datasets: [{
                            label: '√âvolution des demandes',
                            data: {{ demande_timeline|map(item => item.count)|json_encode|raw }},
                            borderColor: '#3498db',
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            } else {
                console.error('Canvas recruitmentEvolutionChart non trouv√©');
            }

            // Chart 1: Statut des r√©clamations
            const statusCtx = document.getElementById('statusChart').getContext('2d');
            const statusData = {{ statusDataJson|raw }};
            const statusLabels = statusData.slice(1).map(item => item[0]);
            const statusValues = statusData.slice(1).map(item => item[1]);
            
            new Chart(statusCtx, {
                type: 'doughnut',
                data: {
                    labels: statusLabels,
                    datasets: [{
                        data: statusValues,
                        backgroundColor: ['#f39c12', '#3498db', '#2ecc71'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const value = context.raw;
                                    const percentage = ((value / total) * 100).toFixed(1);
                                    return `${context.label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
            
            // Chart 2: Sentiment des r√©clamations
            const sentimentCtx = document.getElementById('sentimentChart').getContext('2d');
            const sentimentData = {{ sentimentDataJson|raw }};
            const sentimentLabels = sentimentData.slice(1).map(item => item[0]);
            const sentimentValues = sentimentData.slice(1).map(item => item[1]);
            
            new Chart(sentimentCtx, {
                type: 'doughnut',
                data: {
                    labels: sentimentLabels,
                    datasets: [{
                        data: sentimentValues,
                        backgroundColor: ['#2ecc71', '#f39c12', '#e74c3c'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const value = context.raw;
                                    const percentage = ((value / total) * 100).toFixed(1);
                                    return `${context.label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
            
            // Chart 3: Type des r√©clamations
            const typeCtx = document.getElementById('typeChart').getContext('2d');
            const typeData = {{ typeDataJson|raw }};
            const typeLabels = typeData.slice(1).map(item => item[0]);
            const typeValues = typeData.slice(1).map(item => item[1]);
            
            new Chart(typeCtx, {
                type: 'bar',
                data: {
                    labels: typeLabels,
                    datasets: [{
                        data: typeValues,
                        backgroundColor: '#3498db',
                        borderWidth: 1
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true
                        }
                    }
                }
            });
            
            // Chart 4: Timeline des r√©clamations
            const timelineCtx = document.getElementById('timelineChart').getContext('2d');
            const timelineData = {{ timelineDataJson|raw }};
            const timelineLabels = timelineData.slice(1).map(item => item[0]);
            const timelineValues = timelineData.slice(1).map(item => item[1]);
            
            new Chart(timelineCtx, {
                type: 'line',
                data: {
                    labels: timelineLabels,
                    datasets: [{
                        data: timelineValues,
                        borderColor: '#3498db',
                        backgroundColor: 'rgba(52, 152, 219, 0.1)',
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
{% endblock %}