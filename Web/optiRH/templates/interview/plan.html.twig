{% extends 'partials/layout-vertical.html.twig' %}

{% block title %}Planifier un entretien | Gestion RH{% endblock %}

{% block css %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        .interview-card {
            border-radius: 0.75rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        .interview-card:hover {
            transform: translateY(-5px);
        }
        .slot-card {
            cursor: pointer;
            border: 1px solid #e0e0e0;
            border-radius: 0.5rem;
            padding: 0.75rem;
            transition: all 0.2s ease;
            background-color: #f8f9fa;
        }
        .slot-card:hover {
            background-color: #e7f1ff;
            border-color: #007bff;
        }
        .slot-card.selected {
            background-color: #007bff;
            color: white;
            border-color: #0056b3;
        }
        .slot-card.selected .tag {
            background-color: #ffffff;
            color: #007bff;
        }
        .tag {
            font-size: 0.75rem;
            padding: 0.2rem 0.5rem;
            border-radius: 1rem;
            margin-left: 0.5rem;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.3);
        }
        .accordion-button {
            font-weight: 500;
            color: #007bff;
        }
        .accordion-button:not(.collapsed) {
            background-color: #e7f1ff;
            color: #0056b3;
        }
        .filter-btn {
            margin-right: 0.5rem;
            font-size: 0.9rem;
        }
        .filter-btn.active {
            background-color: #007bff;
            color: white;
        }
    </style>
{% endblock %}

{% block topbar %}
    {{ include('partials/topbar.html.twig', {
        page_title: 'Planifier un entretien',
        breadcrumb: {
            'Liste des demandes': path('app_demande_index'),
            'Détails': path('app_demande_show', {'id': demande.id}),
            'Planifier': ''
        }
    }) }}
{% endblock %}

{% block body %}
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card interview-card fade-in">
                <div class="card-body">
                    <h4 class="header-title mb-4">
                        <i class="mdi mdi-calendar-clock me-2 text-primary"></i>
                        Planifier un entretien pour
                        {% if demande.offre %}
                            <span class="tag bg-primary text-white">{{ demande.offre.poste }}</span>
                        {% else %}
                            <span class="tag bg-warning text-dark">Poste non spécifié</span>
                        {% endif %}
                        - {{ demande.nomComplet }}
                    </h4>
                    <span class="tag bg-{% if demande.statut == 'ACCEPTEE' %}success{% elseif demande.statut == 'EN_ATTENTE' %}warning{% else %}danger{% endif %} mb-3">
                        {{ demande.statut|capitalize }}
                    </span>

                    <div class="mb-3">
                        <button type="button" class="btn btn-outline-danger" id="google-auth-btn">
                            <i class="mdi mdi-google me-1"></i> Connectez-vous avec Google pour générer des liens Meet
                        </button>
                        <div id="auth-status" style="display: none;">
                            <p class="mt-2 text-success"><i class="mdi mdi-check-circle me-1"></i> Connecté avec Google.</p>
                        </div>
                    </div>

                    {{ form_start(form, {'attr': {'id': 'interview-form'}}) }}
                    <div class="mb-3">
                        <label class="form-label">
                            <i class="mdi mdi-calendar me-1"></i> Date et heure
                        </label>
                        {{ form_widget(form.dateTime, {'attr': {'class': 'form-control flatpickr', 'placeholder': 'Sélectionnez la date et l\'heure'}}) }}
                        {{ form_errors(form.dateTime) }}
                    </div>

                    <div class="mb-3">
                        <label class="form-label">
                            <i class="mdi mdi-link-variant me-1"></i> Lien Google Meet
                        </label>
                        {{ form_widget(form.googleMeetLink, {'attr': {'class': 'form-control', 'placeholder': 'Le lien sera généré automatiquement', 'readonly': 'readonly'}}) }}
                        {{ form_errors(form.googleMeetLink) }}
                    </div>

                    <div class="mb-3">
                        <label class="form-label">
                            <i class="mdi mdi-clock-outline me-1"></i> Créneaux suggérés
                        </label>
                        <div class="mb-2">
                            <button type="button" class="btn btn-outline-primary filter-btn active" data-filter="all">Tous</button>
                            <button type="button" class="btn btn-outline-primary filter-btn" data-filter="Matin">Matin</button>
                            <button type="button" class="btn btn-outline-primary filter-btn" data-filter="Après-midi">Après-midi</button>
                            <button type="button" class="btn btn-outline-primary filter-btn" data-filter="recommended">Recommandé</button>
                        </div>
                        <div class="accordion" id="slots-accordion">
                            {% if suggested_slots is defined and suggested_slots|length > 0 %}
                                {% set slots_by_day = {} %}
                                {% for slot in suggested_slots %}
                                    {% set day = slot.dateTime|date('Y-m-d') %}
                                    {% set slots_by_day = slots_by_day|merge({ (day): (slots_by_day[day] ?? [])|merge([slot]) }) %}
                                {% endfor %}
                                {% for day, slots in slots_by_day %}
                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="heading-{{ day }}">
                                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-{{ day }}" aria-expanded="false" aria-controls="collapse-{{ day }}">
                                                {{ day|date('d/m/Y') }} ({{ slots|length }} créneaux)
                                            </button>
                                        </h2>
                                        <div id="collapse-{{ day }}" class="accordion-collapse collapse" aria-labelledby="heading-{{ day }}" data-bs-parent="#slots-accordion">
                                            <div class="accordion-body">
                                                <div class="row g-2">
                                                    {% for slot in slots %}
                                                        <div class="col-md-4 slot-card"
                                                             data-datetime="{{ slot.dateTime|date('c') }}"
                                                             data-period="{{ slot.period }}"
                                                             data-priority="{{ slot.priority }}">
                                                            <div class="d-flex align-items-center">
                                                                <span>{{ slot.dateTime|date('H:i') }}</span>
                                                                <span class="tag bg-info text-white">{{ slot.period }}</span>
                                                                {% if slot.priority == 'recommended' %}
                                                                    <span class="tag bg-success text-white">★</span>
                                                                {% endif %}
                                                            </div>
                                                        </div>
                                                    {% endfor %}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                {% endfor %}
                            {% else %}
                                <div class="slot-container"></div>
                            {% endif %}
                        </div>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="mdi mdi-check-circle me-1"></i> Planifier
                        </button>
                        <a href="{{ path('app_demande_show', {'id': demande.id}) }}" class="btn btn-light">
                            <i class="mdi mdi-arrow-left me-1"></i> Annuler
                        </a>
                    </div>
                    {{ form_end(form) }}
                </div>
            </div>

            <div class="card interview-card fade-in mt-4" id="preview-card" style="display: none;">
                <div class="card-body">
                    <h5 class="mb-3 text-primary"><i class="mdi mdi-eye me-2"></i> Aperçu de l'entretien</h5>
                    <p><strong>Date et heure :</strong> <span id="preview-datetime"></span></p>
                    <p>
                        <strong>Lien Google Meet :</strong>
                        <a id="preview-meet-link" href="#" target="_blank"></a>
                        <small class="text-muted d-block mt-1">Le lien sera actif 10 minutes avant l'heure de l'entretien.</small>
                    </p>
                    <p><strong>Candidat :</strong> {{ demande.nomComplet }}</p>
                    <p><strong>Poste :</strong> {{ demande.offre ? demande.offre.poste : 'Non spécifié' }}</p>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/fr.js"></script>
    <script>
        $(document).ready(function() {
            flatpickr('.flatpickr', {
                enableTime: true,
                dateFormat: 'Y-m-d H:i',
                time_24hr: true,
                locale: 'fr',
                minDate: 'today',
                minuteIncrement: 15,
                defaultHour: 9,
                defaultMinute: 0
            });

            // Simuler une authentification réussie pour les admins
            {% if is_granted('ROLE_ADMIN') %}
            $('#google-auth-btn').hide();
            $('#auth-status').show();
            {% endif %}

            // Simuler l'authentification Google au clic
            $('#google-auth-btn').on('click', function() {
                Swal.fire({
                    icon: 'success',
                    title: 'Connexion réussie',
                    text: 'Vous êtes connecté avec Google.',
                });
                $('#google-auth-btn').hide();
                $('#auth-status').show();
            });

            const demandeId = {{ demande.id }};
            if ($('.slot-container').length) {
                $.get('/api/interview/suggest-slots/' + demandeId, function(data) {
                    if (data.slots) {
                        const slotContainer = $('.slot-container');
                        const slotsByDay = {};
                        data.slots.forEach(slot => {
                            const day = new Date(slot.dateTime).toISOString().slice(0, 10);
                            if (!slotsByDay[day]) slotsByDay[day] = [];
                            slotsByDay[day].push(slot);
                        });

                        Object.keys(slotsByDay).forEach(day => {
                            const slots = slotsByDay[day];
                            slotContainer.append(`
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="heading-${day}">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${day}" aria-expanded="false" aria-controls="collapse-${day}">
                                            ${new Date(day).toLocaleDateString('fr-FR')} (${slots.length} créneaux)
                                        </button>
                                    </h2>
                                    <div id="collapse-${day}" class="accordion-collapse collapse" aria-labelledby="heading-${day}" data-bs-parent="#slots-accordion">
                                        <div class="accordion-body">
                                            <div class="row g-2">
                                                ${slots.map(slot => `
                                                    <div class="col-md-4 slot-card"
                                                         data-datetime="${slot.dateTime}"
                                                         data-period="${slot.period}"
                                                         data-priority="${slot.priority}">
                                                        <div class="d-flex align-items-center">
                                                            <span>${new Date(slot.dateTime).toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit', timeZone: 'Europe/Paris' })}</span>
                                                            <span class="tag bg-info text-white">${slot.period}</span>
                                                            ${slot.priority === 'recommended' ? '<span class="tag bg-success text-white">★</span>' : ''}
                                                        </div>
                                                    </div>
                                                `).join('')}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `);
                        });
                    }
                });
            }

            $(document).on('click', '.slot-card', function() {
                $('.slot-card').removeClass('selected');
                $(this).addClass('selected');
                const datetime = $(this).data('datetime');
                const localDate = new Date(datetime);
                const formattedDate = localDate.toLocaleString('sv', { timeZone: 'Europe/Paris' })
                    .replace(' ', ' ')
                    .slice(0, 16);
                $('#interview_dateTime').val(formattedDate);
                updatePreview();
            });

            $('#interview_dateTime').on('input change', updatePreview);

            function updatePreview() {
                const dateTime = $('#interview_dateTime').val();
                if (dateTime) {
                    $('#preview-datetime').text(dateTime ? new Date(dateTime).toLocaleString('fr-FR', { timeZone: 'Europe/Paris' }) : 'Non spécifié');
                    $('#preview-meet-link').text('Sera généré après planification').attr('href', '#');
                    $('#preview-card').show();
                } else {
                    $('#preview-card').hide();
                }
            }

            $('.filter-btn').on('click', function() {
                $('.filter-btn').removeClass('active');
                $(this).addClass('active');
                const filter = $(this).data('filter');
                $('.slot-card').each(function() {
                    const period = $(this).data('period');
                    const priority = $(this).data('priority');
                    if (filter === 'all' ||
                        (filter === period) ||
                        (filter === 'recommended' && priority === 'recommended')) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            $('#interview-form').on('submit', function(e) {
                e.preventDefault();
                const dateTime = $('#interview_dateTime').val();

                if (!dateTime) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Erreur',
                        text: 'Veuillez sélectionner une date et une heure.',
                    });
                    return;
                }
                try {
                    new Date(dateTime);
                } catch (e) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Erreur',
                        text: 'Format de date invalide.',
                    });
                    return;
                }

                $.ajax({
                    url: '/api/interview/select-slot/' + demandeId,
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        dateTime: dateTime
                    }),
                    success: function(response) {
                        // Mettre à jour l'aperçu avec le vrai lien Google Meet
                        $('#preview-datetime').text(new Date(dateTime).toLocaleString('fr-FR', { timeZone: 'Europe/Paris' }));
                        $('#preview-meet-link').text(response.googleMeetLink).attr('href', response.googleMeetLink);
                        $('#preview-card').show();

                        Swal.fire({
                            icon: 'success',
                            title: 'Entretien planifié',
                            text: 'L\'entretien a été planifié avec succès !',
                            timer: 2000
                        }).then(() => {
                            window.location.href = '{{ path('app_demande_show', {'id': demande.id}) }}';
                        });
                    },
                    error: function(xhr) {
                        let errorMessage = 'Une erreur est survenue lors de la planification.';
                        if (xhr.responseJSON && xhr.responseJSON.error) {
                            errorMessage = xhr.responseJSON.error;
                        }
                        Swal.fire({
                            icon: 'error',
                            title: 'Erreur',
                            text: errorMessage
                        });
                    }
                });
            });
        });
    </script>
{% endblock %}